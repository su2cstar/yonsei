summary(aov2)
Wu
##ANOVA table
aov1 = aov(y ~ Wu1 + Wu2 +Wu3 + Wu4+ Wu5+ Wu6 -1)
summary(aov1)
##ANOVA table
aov1 = aov(y ~ Wu)
summary(aov1)
##ANOVA table
aov1 = aov(y ~ Wu-1)
summary(aov1)
## make X
X0 = Wr1
X1 = Wr2 - Wr3
X2 = Wr4 - Wr6
X3 = Wr5 - Wr6
X4 = X2*X3
X5 = X2*X4
X = cbind(X1,X2,X3,X4,X5,X6)
X
X = cbind(X0,X1,X2,X3,X4,X5)#,X6)
a = c(1,2,3,4,5,6)
cov(a)
a
cov(a,a)
c = cbind(a,b)
c
a = c(1,2,3,4,5,6)
b= c(2,3,4,5,6,7)
d = cbind(a,b)
d
cov(d,d)
boston
iris
Bostion
Boston
data(Boston)
data(boston)
library('car')
install.packages('car')
library(car)
boston
data(boston)
datan=readline("Enter the data file name: " )
cat("Select the data coding format(1 = 'a b c' or 2 = 'a,b,c'): ")
install.packages('rpart')
library(rpart)
catCol =readline('enter your categorical variavle location (ex: 1,3,5) seperated with comma(,) :')
catCol
ex1 = c(13,25,26,4,12,17,19,22,19,7,3,19,0,17)
length(ex1)
mean(ex1)
median(ex1)
mode(ex1)
plot(ex1)
hist(ex1)
?hist(ex1)
?hist(ex1,breaks=20)
hist(ex1,breaks=20)
hist(ex1,breaks=30)
table(ex1)
hist(table(ex1))
table(ex1)
max(ex1)
min(ex1)
sort(ex1)
mean(ex1)
median(ex1)
table(ex1)
max(ex1)
min(ex1)
##ex2)
?rnorm
rxi
rxs
rchisq(100,1)
plot(rchisq(100,1))
plot(rchisq(1000,1))
rf
rf(100,2,3)
plot(rf(100,2,3))
plot(rchisq(1000,3))
hist(rchisq(1000,3))
dchisq(0)
Y = dchisq(X ,df=3)
Y = dchisq(3 ,df=3)
Y
Y = dchisq(1 ,df=3)
Y
##ex3
ex3 = c(2,2,3,3,3,3,4,4,5,7,10)
hist(ex3)
?hist(ex3)
hist(ex3,breaks = 10)
mean(ex3)
hist(ex3,breaks = 11)
hist(ex3,breaks = 20)
table(ex3)
median(ex3)
#ex4
hist(rchisq(100,3))
#ex4
hist(rchisq(100,3),breaks=100)
#ex4
hist(rchisq(1000,3),breaks=100)
lscewed=-rchisq(1000,3)
#ex4
rscewed=rchisq(1000,3)
hist(rscewed,breaks=100)
lscewed=-rchisq(1000,3)
hist(lscewed,breaks =100)
#ex4
rscewed=rchisq(1000,3)
hist(rscewed,breaks=100)
lscewed=-rchisq(1000,3)
hist(lscewed,breaks =100)
lscewed
#ex4
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(rscewed)
hist(rscewed,breaks=100)
mean(rscewed)
rscewed=rchisq(10000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
mean(rscewed)
getmode(rscewed)
median(rscewed)
ex4 =c(1,1,1,1,2,2,2,2,2,3,3,3,3,4,4,4,5,5)
table(ex4)
hist(ex4)
hist(ex4,breaks=5)
hist(ex4,breaks=6)
hist(ex4,breaks=10)
mean(ex4)
sort(ex1)
mean(ex1)
median(ex1)
table(ex1)
max(ex1)
min(ex1)
hist(ex3,breaks = 20)
mean(ex3)
##ex2
#categorical value
18/99
ex4 =c(1,1,1,1,2,2,2,2,2,3,3,3,3,4,4,4,5,5)
table(ex4)
hist(ex4,breaks=10)
mean(ex4)
median(ex4)
ex4 =c(1,1,1,1,2,2,2,2,2,2,3,3,3,3,4,4,4,5,5)
table(ex4)
hist(ex4,breaks=10)
mean(ex4)
median(ex4)
ex4 =c(1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,4,4,4,4,5,5)
table(ex4)
hist(ex4,breaks=10)
mean(ex4)
median(ex4)
rscewed=rchisq(10000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
getmode(rscewed)
mean(rscewed)
median(rscewed)
rscewed=rchisq(10000,3)
mean(rscewed)
getmode(rscewed)
median(rscewed)
ex4 =c(1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,4,4,4,4,5,5)
hist(ex4,breaks=10)
table(ex4)
mean(ex4)
median(ex4)
3(1-2/27)^3
3*(1-2/27)^3
ex4 =c(1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,4,4,4,4,5,5)
table(ex4)
mean(ex4)
median(ex4)
rscewed=rchisq(10000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
getmode(rscewed)
hist(rscewed,breaks=100)
rscewed=rchisq(10000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
ex4 =c(1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,4,4,4,4,5,5)
mean(ex4)
median(ex4)
hist(ex4,breaks=10)
table(ex4)
table(ex4)
hist(ex4,breaks=10)
mean(ex4)
median(ex4)
mean(rscewed)
median(rscewed)
hist(rscewed,breaks=100)
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
rscewed=rchisq(100000,3)
random.seed = 0
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
random.seed = 1
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
lscewed=-rchisq(100000,3)
hist(lscewed,breaks=100)
mean(lscewed)
getmode(lscewed)
median(lscewed)
a= c(8,12,9,2,10,15)
b = a - mena(a)
b = a - meaa(a)
b = a - mean(a)
b
b/std(a)
b/(var(a))^0.5
var(a)
sqrt(var(a))
random.seed = 0
rscewed=rchisq(1000000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
random.seed = 10
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
random.seed = 1
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
rscewed=rchisq(10000000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
random.seed = 1231
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
lscewed=-rchisq(100000,3)
hist(lscewed,breaks=100)
mean(lscewed)
getmode(lscewed)
median(lscewed)
random.seed = 1231
lscewed=-rchisq(100000,3)
hist(lscewed,breaks=100)
mean(lscewed)
getmode(lscewed)
median(lscewed)
random.seed = 1231
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
random.seed = 1231
random.seed = 1231
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
random.seed = 1231
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
random.seed = 1231
set.seed(0)
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
set.seed(0)
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
set.seed(10)
rscewed=rchisq(100000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
set.seed(10)
rscewed=rchisq(1000000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
set.seed(10)
rscewed=rchisq(10000000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
set.seed(10)
rscewed=rchisq(1000000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
random.seed = 1231
set.seed(1231)
rscewed=rchisq(1000000,3)
hist(rscewed,breaks=100)
mean(rscewed)
getmode(rscewed)
median(rscewed)
random.seed = 1231
##ex3
ex3 = c(2,2,3,3,3,3,4,4,5,7,10)
hist(ex3,breaks = 20)
mean(ex3)
table(ex3)
median(ex3)
hist(ex3,breaks = 20,xlab = c(1,2,3,4,5,6,7,8,9,10))
hist(ex3,breaks = 20,xlab = c(1,2,3,4,5,6,7,8,9,10))
##ex3
ex3 = c(1,2,2,3,3,3,3,4,4,5,7,10)
hist(ex3,breaks = 20,xlab = c(1,2,3,4,5,6,7,8,9,10))
##ex3
a=table(ex3)
a
hist(a)
?hist(ex3,breaks = 20,x = c(1,2,3,4,5,6,7,8,9,10))
ex3 = c(1,2,2,3,3,3,3,4,4,5,7,10)
hist(ex3,breaks = 20,x = c(1,2,3,4,5,6,7,8,9,10))
##ex3
a=table(ex3)
hist(a)
ex3 = c(1,2,2,3,3,3,3,4,4,5,7,10)
hist(ex3,breaks = 20,x = c(1,2,3,4,5,6,7,8,9,10))
hist(ex3,breaks = 20)#,x = c(1,2,3,4,5,6,7,8,9,10))
ex3 = c(2,2,3,3,3,3,4,4,5,7)
mean(ex3)
table(ex3)
median(ex3)
ex3 = c(1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,4,4,4,5)
hist(ex3,breaks = 20)#,x = c(1,2,3,4,5,6,7,8,9,10))
mean(ex3)
table(ex3)
median(ex3)
getmode(ex3)
getmode(ex3)
hist(ex3)#,breaks = 20)
hist(ex3,breaks = 20)
table(ex3)
ex3 = c(1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,4,4,4,4,5)
table(ex3)
hist(ex3,breaks = 20)
mean(ex3)
getmode(ex3)
median(ex3)
##ex1)
ex1 = c(13,25,26,4,12,17,19,22,19,7,3,19,0,17)
sort(ex1)
mean(ex1)
median(ex1)
table(ex1)
min(ex1)
max(ex1)
ex3 = c(1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,4,4,4,4,5)
table(ex3)
hist(ex3,breaks = 20)
mean(ex3)
getmode(ex3)
median(ex3)
ex3 = c(1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,5)
table(ex3)
hist(ex3,breaks = 20)
mean(ex3)
ex3 = c(1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,5)
table(ex3)
hist(ex3,breaks = 20)
mean(ex3)
getmode(ex3)
median(ex3)
(0.13*0.87)/2060
(0.13*0.87)/2060 + (0.19*0.81)/5000
sqrt((0.13*0.87)/2060 + (0.19*0.81)/5000)
0.01/0.0093
0.01/sqrt((0.13*0.87)/2060 + (0.19*0.81)/5000)
1.96*sqrt((0.13*0.87)/2060 + (0.19*0.81)/5000)
sqrt((0.13*0.87)/2060 + (0.19*0.81)/5000)
sqrt((1217.8/7060)*(1/5000+1/2060))
0.01/sqrt((0.13*0.87)/2060 + (0.19*0.81)/5000)
0.01/sqrt((1217.8/7060)*(1/5000+1/2060))
0.01/sqrt((0.13*0.87)/2060 + (0.19*0.81)/5000)
0.01/sqrt((1217.8/7060)*(1/5000+1/2060))
0.1/0.09
0.01/0.09
0.01/0.009
0.01/0.0092
0.01/0.00925
0.01/0.0093
0.1/1.071
##set working directory and install package
setwd('C:\\Users\\ahn92\\Dropbox\\Sources\\Ybigta\\PJ_psat_ybig')
#install.packages('h2o')
#train = read.csv('train.csv')
##call library
library(data.table)
library(h2o)
##read data files
train <- fread("train_train.csv",stringsAsFactors = T)
test  <- fread("train_test.csv",stringsAsFactors = T)
store <- fread("Drugstore_data\\store.csv",stringsAsFactors = T)
ans <- fread('Drugstore_data\\test_ans.csv',stringsAsFactors = T)
##use train data whose sales is not zero
train <- train[Sales > 0,]
##merge the data table inner join with 'Store' Key
train <- merge(train,store,by="Store")
test <- merge(test,store,by="Store")
test_ans <- merge(ans,store,by="Store")
##change the data type of Date column to 'Date' Type
train[,Date:=as.Date(Date)]
test[,Date:=as.Date(Date)]
##set the data type of each data
train[,month:=as.integer(format(Date, "%m"))]
train[,year:=as.integer(format(Date, "%y"))]
train[,Store:=as.factor(as.numeric(Store))]
test[,month:=as.integer(format(Date, "%m"))]
test[,year:=as.integer(format(Date, "%y"))]
test[,Store:=as.factor(as.numeric(Store))]
test[,StateHoliday:=as.factor(StateHoliday)]
## log transformation to not be as sensitive to high sales
train[,logSales:=log1p(Sales)]
## Use H2O's random forest
## Start cluster with all available threads
h2o.init(nthreads=-1,max_mem_size='6G')
## Load data into cluster from R
trainHex<-as.h2o(train)
## Set up variable to use all features other than those specified here
features<-colnames(train)[!(colnames(train) %in% c("Id","Date","Sales","logSales","Customers"))]
## Load test data into cluster from R
testHex<-as.h2o(test)
## make rmspe function
my_rmspe=function(test,pred){
rmspe = 0
for (i in 1:length(test$Sales)) {
if (test$Sales[i]!=0) {
rmspe = rmspe + ((test$Sales[i]-pred[i])/test$Sales[i])^2
}
else{
rmspe = rmspe + ((test$Sales[i]-pred[i])/(test$Sales[i]+0.001))^2
}
}
hjlk
;
}{}
?h2o.randomForest
grid_space <- list()
grid_space$ntrees <- c(50,100)
grid_space$max_depth <- c(30)
grid_space$nbins_cats <- c(1115)
#grid_space$mtries <- c(3,5)
cars_drf_grid <- h2o.grid("randomForest", grid_id="letsgetit", x=features, y='Sales',training_frame=trainHex, hyper_params=grid_space)
