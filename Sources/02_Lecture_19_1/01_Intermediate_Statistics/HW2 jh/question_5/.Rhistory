plot(density(x2))
plot(density(x3),xlim=c(0,6),main='Gaussian Mixture Model', xlab='X3',col='b')
par(new=TRUE)
plot(density(x1))
help(plot)
par(new=TRUE)
plot(density(x2))
plot(density(x3),xlim=c(0,6),main='Gaussian Mixture Model', xlab='X3')
par(new=TRUE)
plot(density(x1))
help(plot)
par(new=TRUE)
plot(density(x2))
library(ggplot2)
rbind(density(x1),density(x2),density(x3))
density(x1)
rbind(density(x1)$data,density(x2),density(x3))
density(x1)$data
density(x1)
x_vec =rbind(density(x1),density(x2),density(x3))
ggplot(x_vec)
data.frame(density(x1))
rbind(x1,x2,x3
)
as.data.frame(rbind(x1,x2,x3))
ggplot(rbind(x1,x2,x3))
as.data.frame(rbind(x1,x2,x3))
ggplot(as.data.frame(rbind(x1,x2,x3)))
ggplot(as.data.frame(rbind(x1,x2,x3)),aes(x=weight, color=sex)) +
geom_density())
geom_density(x1)
ggplot(x1,aes(x=weight)) + geom_density())
ggplot(x1,aes(x=weight)) + geom_density()
ggplot(x1,aes(x=weight) + geom_density())
ggplot(x1,aes(x=weight)) + geom_density())
ggplot(x1,aes(x=weight)) + geom_density())
ggplot(x1,aes(x=weight)) + geom_density()
ggplot(data.frame(x1),aes(x=weight)) + geom_density()
data.frame(x1)
ggplot(data.frame(x1),aes(x=x1)) + geom_density()
ggplot(data.frame(rbind(x1,x2,x3),aes(x=x1)) + geom_density()
ggplot(data.frame(rbind(x1,x2,x3)),aes(x=x1)) + geom_density()
ggplot(data.frame(rbind(x1,x2,x3)),aes(x=x1)) + geom_density()
data.frame(rbind(x1,x2,x3))
ggplot(data.frame(rbind(x1,x2,x3)),aes(x=x1)) + geom_density()
ggplot(data.frame(Cbind(x1,x2,x3)),aes(x=x1)) + geom_density()
ggplot(data.frame(cbind(x1,x2,x3)),aes(x=x1)) + geom_density()
data.frame(cbind(x1,x2,x3)
data.frame(cbind(x1,x2,x3))
data.frame(cbind(x1,x2,x3))
x1=rnorm(n,-13.39800938,0.75916342)
x2=rnorm(n,5.36525358,0.28099578)
lambda = 0.02081396
x3=lambda*x1+(1-lambda)*x2
n
#step2. plot
n=100
x1=rnorm(n,-13.39800938,0.75916342)
x2=rnorm(n,5.36525358,0.28099578)
lambda = 0.02081396
x3=lambda*x1+(1-lambda)*x2
rep("x1",n)
cbind(rep("x1",n), x1)
cbind(rep("x1", n), as.double(x1))
cbind(rep("x1", n), as.double(x1))
cbind(rep("x1", n), as.numeric(x1))
x1
type(x1)
typeof(x1)
cbind(rep("x1", n), double(x1))
cbind(rep("x1", n), as.double(x1))
rbind(cbind(rep("x1", n), as.double(x1)), cbind(rep("x2", n), as.double(x2)), cbind(rep("x3", n), as.double(x3)))
df1 = rbind(cbind(rep("x1", n), as.double(x1)), cbind(rep("x2", n), as.double(x2)), cbind(rep("x3", n), as.double(x3)))
x1
rbind(x1,x2,x3)
x1
cbind(x1,x2,x3)
dim(rbind(x1,x2,x3))
x1
dim(rbind(t(x1),t(x2),t(x3))
dim(rbind(t(x1),t(x2),t(x3)))
df1 = data.frame(
dim(rbind(t(x1),t(x2),t(x3)))
dim(rbind(t(x1),t(x2),t(x3))
dim(rbind(t(x1),t(x2),t(x3))
dim(rbind(t(x1),t(x2),t(x3)))
dim(rbind(t(x1),t(x2),t(x3)))
dim(rbind(t(x1),t(x2),t(x3)))
dim(rbind(t(x1),t(x2),t(x3)))
dim(rbind(x1,x2,x3))
x1
as.matrix(x1, byrow=TRUE)
rbind(as.matrix(x1, byrow=TRUE), as.matrix(x2, byrow=TRUE), as.matrix(x3, byrow=TRUE))
df1=rbind(as.matrix(x1, byrow=TRUE), as.matrix(x2, byrow=TRUE), as.matrix(x3, byrow=TRUE))
df2=rbind(as.matrix(rep("x1",n)),as.matrix(rep("x2",n)),as.matrix(rep("x3",n)))
df2
df3=data.frame(df1,df2)
df3
df1=rbind(as.matrix(rep("x1",n)),as.matrix(rep("x2",n)),as.matrix(rep("x3",n)))
df2=rbind(as.matrix(x1, byrow=TRUE), as.matrix(x2, byrow=TRUE), as.matrix(x3, byrow=TRUE))
df3=data.frame(df1,df2)
df3
ggplot(df3, aes(x=df2)) + geom_density()
ggplot(df3, aes(x=df2,color=df1)) + geom_density()
ggplot(df3, aes(x=df2,fill=df1)) + geom_density()
ggplot(df3, aes(x=df2,fill=df1)) + geom_density() + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
random_variable=rbind(as.matrix(rep("x1",n)),as.matrix(rep("x2",n)),as.matrix(rep("x3",n)))
random_value=rbind(as.matrix(x1, byrow=TRUE), as.matrix(x2, byrow=TRUE), as.matrix(x3, byrow=TRUE))
df1=data.frame(random_variable,random_value)
ggplot(df1, aes(x=random_variable,fill=random_value)) + geom_density() + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
#step2. plot
n=100
x1=rnorm(n,-13.39800938,0.75916342)
x2=rnorm(n,5.36525358,0.28099578)
lambda = 0.02081396
x3=lambda*x1+(1-lambda)*x2
random_variable=rbind(as.matrix(rep("x1",n)),as.matrix(rep("x2",n)),as.matrix(rep("x3",n)))
random_value=rbind(as.matrix(x1, byrow=TRUE), as.matrix(x2, byrow=TRUE), as.matrix(x3, byrow=TRUE))
df1=data.frame(random_variable,random_value)
ggplot(df1, aes(x=random_variable,fill=random_value)) + geom_density() + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
df1
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density() + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density()
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density() + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density()
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density()
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density() + facet_grid(random_variable ~ .)
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density() + facet_grid(random_variable ~ .)
library(stringi)
package.install("stringi")
install.package("stringi")
install.packages("stringi")
library(stringi)
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density() + facet_grid(random_variable ~ .)
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density()
rm(list=ls())
#install.packages("stringi")
library(ggplot2)
library(stringi)
#gaussian mixture model
#let
#X1~normal(mu1, sigma1)
#X2~normal(mu2, sigma2)
#X3=lambda*X1+(1-lambda)*X2
#then, X3 is Gaussian Mixture
#1st moment of X3 = E[X3] = lambda*mu1+(1-lambda)*mu2
#2nd moment of X3 = E[X3^2] = lambda*((mu1**2)+(sigma1**2))+(1-lambda)*((mu2**2)+(sigma2**2))
#3rd moment of X3 = E[X3^3] = lambda*((mu1**3)+(3*mu1*sigma1**2))+(1-lambda)*((mu2**3)+(3*mu1*sigma1**2))
#reference paper
#Moment Varieties of Gaussian Mixtures
#Carlos Am´endola, Jean-Charles Faug`ere, and Bernd Sturmfels
#https://arxiv.org/pdf/1510.04654.pdf
#step1. find Gaussian Mixture's params by optimization
loss_fn = function(param_vec){
mu1=param_vec[1]
sigma1=param_vec[2]
mu2=param_vec[3]
sigma2=param_vec[4]
lambda=param_vec[5]
moment1 <<- lambda*mu1+(1-lambda)*mu2
moment2 <<- lambda*((mu1**2)+(sigma1**2))+(1-lambda)*((mu2**2)+(sigma2**2))
moment3 <<- lambda*((mu1**3)+(3*mu1*sigma1**2))+(1-lambda)*((mu2**3)+(3*mu1*sigma1**2))
loss1 <<- (moment1-5)**2+(moment2-32)**2+(moment3-78)**2
cat("1st moment:", moment1, "\n")
cat("2nd moment:", moment2, "\n")
cat("3rd moment:", moment3, "\n")
return(loss1)
}
initial_value = c(-5,0.1,5,0.1,0.2)
result_optim = optim(par=initial_value, fn=loss_fn, method='L-BFGS-B',lower=c(-Inf,0,-Inf,0,0))
result_optim
#step2. plot
n=100
x1=rnorm(n,-13.39800938,0.75916342)
x2=rnorm(n,5.36525358,0.28099578)
lambda = 0.02081396
x3=lambda*x1+(1-lambda)*x2
random_variable=rbind(as.matrix(rep("x1",n)),as.matrix(rep("x2",n)),as.matrix(rep("x3",n)))
random_value=rbind(as.matrix(x1, byrow=TRUE), as.matrix(x2, byrow=TRUE), as.matrix(x3, byrow=TRUE))
df1=data.frame(random_variable,random_value)
#each of dists
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density() + facet_grid(random_variable ~ .)
#altogether
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density()
#each of dists
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density() + facet_grid(random_variable ~ .)
rm(list=ls())
#install.packages("stringi")
library(ggplot2)
library(stringi)
#gaussian mixture model
#let
#X1~normal(mu1, sigma1)
#X2~normal(mu2, sigma2)
#X3=lambda*X1+(1-lambda)*X2
#then, X3 is Gaussian Mixture
#1st moment of X3 = E[X3] = lambda*mu1+(1-lambda)*mu2
#2nd moment of X3 = E[X3^2] = lambda*((mu1**2)+(sigma1**2))+(1-lambda)*((mu2**2)+(sigma2**2))
#3rd moment of X3 = E[X3^3] = lambda*((mu1**3)+(3*mu1*sigma1**2))+(1-lambda)*((mu2**3)+(3*mu1*sigma1**2))
#reference paper
#Moment Varieties of Gaussian Mixtures
#Carlos Am´endola, Jean-Charles Faug`ere, and Bernd Sturmfels
#https://arxiv.org/pdf/1510.04654.pdf
#step1. find Gaussian Mixture's params by optimization
loss_fn = function(param_vec){
mu1=param_vec[1]
sigma1=param_vec[2]
mu2=param_vec[3]
sigma2=param_vec[4]
lambda=param_vec[5]
moment1 <<- lambda*mu1+(1-lambda)*mu2
moment2 <<- lambda*((mu1**2)+(sigma1**2))+(1-lambda)*((mu2**2)+(sigma2**2))
moment3 <<- lambda*((mu1**3)+(3*mu1*sigma1**2))+(1-lambda)*((mu2**3)+(3*mu1*sigma1**2))
loss1 <<- (moment1-5)**2+(moment2-32)**2+(moment3-78)**2
cat("1st moment:", moment1, "\n")
cat("2nd moment:", moment2, "\n")
cat("3rd moment:", moment3, "\n")
return(loss1)
}
initial_value = c(-5,0.1,5,0.1,0.2)
result_optim = optim(par=initial_value, fn=loss_fn, method='L-BFGS-B',lower=c(-Inf,0,-Inf,0,0))
result_optim
#step2. plot
n=10000
x1=rnorm(n,-13.39800938,0.75916342)
x2=rnorm(n,5.36525358,0.28099578)
lambda = 0.02081396
x3=lambda*x1+(1-lambda)*x2
random_variable=rbind(as.matrix(rep("x1",n)),as.matrix(rep("x2",n)),as.matrix(rep("x3",n)))
random_value=rbind(as.matrix(x1, byrow=TRUE), as.matrix(x2, byrow=TRUE), as.matrix(x3, byrow=TRUE))
df1=data.frame(random_variable,random_value)
#each of dists
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density() + facet_grid(random_variable ~ .)
#altogether
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density()
#each of dists
ggplot(df1, aes(x=random_value,fill=random_variable)) + geom_density() + facet_grid(random_variable ~ .)
col_name = c('A','B','C','D','E','F','G','H','I','J','K','L')
col_income = c(118,136,129,131,141,138,134,124,193,119,128,128)
data = data.frame(c(col_name, col_income))
data
data = data.frame(cbind(col_name, col_income))
data
boxplot(col_income)
boxplot(col_income, add = TRUE)
boxplot(col_income, axes = FALSE, col = "grey", add = FALSE)
boxplot(col_income)
boxplot(col_income,labels =fivenum(X))
boxplot(col_income,labels =fivenum(col_income))
boxplot(col_income,labels=fivenum(col_income))
labels=fivenum(col_income)
labels
rm(list=ls())
col_name = c('A','B','C','D','E','F','G','H','I','J','K','L')
col_income = c(118,136,129,131,141,138,134,124,193,119,128,128)
data = data.frame(cbind(col_name, col_income))
data
boxplot(col_income,labels=fivenum(col_income))
labels
labels=fivenum(col_income)
fivenum(col_income)
rm(list=ls())
col_name = c('A','B','C','D','E','F','G','H','I','J','K','L')
col_income = c(118,136,129,131,141,138,134,124,193,119,128,128)
data = data.frame(cbind(col_name, col_income))
data
boxplot(col_income)
rm(list=ls())
col_name = c('A','B','C','D','E','F','G','H','I','J','K','L')
col_income = c(118,136,129,131,141,138,134,124,193,119,128,128)
data = data.frame(cbind(col_name, col_income))
data
boxplot(col_income)
text(x=fivenum(col_income), labels =fivenum(col_income), y=1.25)
boxplot(col_income)
text(x=fivenum(col_income), labels =fivenum(col_income), y=1.25)
text(x=fivenum(col_income), labels =fivenum(col_income))
text(x=fivenum(col_income))
boxplot(col_income)
text(x=fivenum(col_income))
X = col_income
rm(list=ls())
col_name = c('A','B','C','D','E','F','G','H','I','J','K','L')
col_income = c(118,136,129,131,141,138,134,124,193,119,128,128)
data = data.frame(cbind(col_name, col_income))
data
X = col_income
boxplot(X, axes = FALSE, staplewex = 1)
text(y = boxplot.stats(X)$stats, labels = boxplot.stats(X)$stats, x = 1.25)
X = col_income
boxplot(X, staplewex = 1)
text(y = boxplot.stats(X)$stats, labels = boxplot.stats(X)$stats, x = 1.25)
no = c(283,30,140,21,274,26,134,18,266,32,134,14)
yes = c(17,20,12,14,24,26,14,21,28,24,12,17)
no
yes
length(no)
length(yes)
no = c(283,30,140,21,274,26,134,18,266,32,134,14)
yes = c(17,20,12,14,24,26,14,21,28,24,12,17)
no = c(283,30,140,21,274,26,134,18,266,32,134,14)
yes = c(17,20,12,14,24,26,14,21,28,24,12,17)
previous = c(0,1,0,1,0,1,0,1,0,1,0,1)
s = c(0,0,1,1,0,0,1,1,0,0,1,1)
t = c(10,10,10,10,9,9,9,9,8,8,8,8)
cbind(no,yes,previous,s,t)
dat = cbind(no,yes,previous,s,t)
fit1 = glm(cbind(yes,no)~previous+s+t,family=binomial,data=dat)
dat = data.frame(cbind(no,yes,previous,s,t))
fit1 = glm(cbind(yes,no)~previous+s+t,family=binomial,data=dat)
summary(fit1)
dat
summary(fit1)
dat
#no = c(283,30,140,21,274,26,134,18,266,32,134,14)
no = c(237,15,16,7,24,3,6,5,118,8,11,6,7,3,4,4)
#yes = c(17,20,12,14,24,26,14,21,28,24,12,17)
yes = c(10,4,2,3,3,2,2,11,6,2,1,4,3,1,2,7)
#no = c(283,30,140,21,274,26,134,18,266,32,134,14)
no = c(237,15,16,7,24,3,6,5,118,8,11,6,7,3,4,4)
#yes = c(17,20,12,14,24,26,14,21,28,24,12,17)
yes = c(10,4,2,3,3,2,2,11,6,2,1,4,3,1,2,7)
previous = c(0,1,0,1,0,1,0,1,0,1,0,1)
s = c(0,0,1,1,0,0,1,1,0,0,1,1)
t = c(10,10,10,10,9,9,9,9,8,8,8,8)
dat = data.frame(cbind(no,yes,previous,s,t))
dat
length(no)
no = c(283,30,140,21,274,26,134,18,266,32,134,14)
yes = c(17,20,12,14,24,26,14,21,28,24,12,17)
previous = c(0,1,0,1,0,1,0,1,0,1,0,1)
s = c(0,0,1,1,0,0,1,1,0,0,1,1)
t = c(10,10,10,10,9,9,9,9,8,8,8,8)
dat = data.frame(cbind(no,yes,previous,s,t))
dat
c1 = c(237,15,16,7,24,3,6,5)
c2 = c(10,4,2,3,3,2,2,11)
c3 = c(118,8,11,6,7,3,4,4)
c4 = c(6,2,1,4,3,1,2,7)
df = data.frame(cbind(c1,c2,c3,c4))
df
dat
dat[c(1,3,5,7),1:2]
df[c(1,3,5,7),1:2]
dat
dat
c1 = c(237,15,16,7,24,3,6,5)
c2 = c(10,4,2,3,3,2,2,11)
c3 = c(118,8,11,6,7,3,4,4)
c4 = c(6,2,1,4,3,1,2,7)
df = data.frame(cbind(c1,c2,c3,c4))
df
no = c(283,30,140,21,274,26,134,18,266,32,134,14)
yes = c(17,20,12,14,24,26,14,21,28,24,12,17)
previous = c(0,1,0,1,0,1,0,1,0,1,0,1)
s = c(0,0,1,1,0,0,1,1,0,0,1,1)
t = c(10,10,10,10,9,9,9,9,8,8,8,8)
dat = data.frame(cbind(no,yes,previous,s,t))
dat
fit1 = glm(cbind(yes,no)~previous+s+t,family=binomial,data=dat)
summary(fit1)
dat
'''
previous가 0이라는 뜻은, 직전에 no였다는것.
s가 0이라는것은 왼쪽, s가 1이라는 것은 오른쪽.(그룹간)
t는 시작한 시간에서 +1
'''
df
c1 = c(237,15,16,7,24,3,6,5)
c2 = c(10,4,2,3,3,2,2,11)
c3 = c(118,8,11,6,7,3,4,4)
c4 = c(6,2,1,4,3,1,2,7)
df = data.frame(cbind(c1,c2,c3,c4))
df
#previous1 data
no = c(283,30,140,21,274,26,134,18,266,32,134,14)
yes = c(17,20,12,14,24,26,14,21,28,24,12,17)
previous = c(0,1,0,1,0,1,0,1,0,1,0,1)
s = c(0,0,1,1,0,0,1,1,0,0,1,1)
t = c(10,10,10,10,9,9,9,9,8,8,8,8)
dat = data.frame(cbind(no,yes,previous,s,t))
dat
fit1 = glm(cbind(yes,no)~previous+s+t,family=binomial,data=dat)
summary(fit1)
rm(list=ls())
#original data
c1 = c(237,15,16,7,24,3,6,5)
c2 = c(10,4,2,3,3,2,2,11)
c3 = c(118,8,11,6,7,3,4,4)
c4 = c(6,2,1,4,3,1,2,7)
df = data.frame(cbind(c1,c2,c3,c4))
df
#previous1 data
no = c(283,30,140,21,274,26,134,18,266,32,134,14)
yes = c(17,20,12,14,24,26,14,21,28,24,12,17)
previous = c(0,1,0,1,0,1,0,1,0,1,0,1)
s = c(0,0,1,1,0,0,1,1,0,0,1,1)
t = c(10,10,10,10,9,9,9,9,8,8,8,8)
dat = data.frame(cbind(no,yes,previous,s,t))
dat
fit1 = glm(cbind(yes,no)~previous+s+t,family=binomial,data=dat)
summary(fit1)
no = c(237,15,16,7,24,3,6,5,118,8,11,6,7,3,4,4)
yes = c(10,4,2,3,3,2,2,11,6,2,1,4,3,1,2,7)
previous = c(0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1)
s = c(0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1)
t = c(10,10,10,10,9,9,9,9,8,8,8,8)
#previous2 data
df2 = read_csv("data.csv")
#previous2 data
getwd()
chdir("D:/강재훈/연세대학교/석사/2019_1_석사_2학기/수업/중응통/HW/HW2/question_5/")
setwd("D:/강재훈/연세대학교/석사/2019_1_석사_2학기/수업/중응통/HW/HW2/question_5/")
dat2 = read_csv("data.csv")
dat2 = read.csv("data.csv")
dat2
dat2 = read.csv("data.csv", encoding = 'CP949')
dat2
dat2 = read.csv("data.csv", encoding = 'utf8')
dat2
dat2 = read.csv("data.csv", encoding = 'utf8')
dat2
dat2 = read.csv("data.csv", encoding = 'latin')
dat2
dat2 = read.csv("data.csv")
dat2
dat2.column
dat2.columns
colnames(dat2) = c('no','yes','previous1','previous2','s','t')
colnames(dat2) = c('no','yes','previous1','previous2','s','t')
dat2
fit2 = glm(cbind(yes,no)~previous+previous2+s+t,family=binomial,data=dat2)
summary(fit2)
rm(list=ls())
#original data
c1 = c(237,15,16,7,24,3,6,5)
c2 = c(10,4,2,3,3,2,2,11)
c3 = c(118,8,11,6,7,3,4,4)
c4 = c(6,2,1,4,3,1,2,7)
df = data.frame(cbind(c1,c2,c3,c4))
df
#previous1 data
no = c(283,30,140,21,274,26,134,18,266,32,134,14)
yes = c(17,20,12,14,24,26,14,21,28,24,12,17)
previous = c(0,1,0,1,0,1,0,1,0,1,0,1)
s = c(0,0,1,1,0,0,1,1,0,0,1,1)
t = c(10,10,10,10,9,9,9,9,8,8,8,8)
dat = data.frame(cbind(no,yes,previous,s,t))
dat
fit1 = glm(cbind(yes,no)~previous+s+t,family=binomial,data=dat)
summary(fit1)
#previous2 data
getwd()
setwd("D:/강재훈/연세대학교/석사/2019_1_석사_2학기/수업/중응통/HW/HW2/question_5/")
dat2 = read.csv("data.csv")
colnames(dat2) = c('no','yes','previous1','previous2','s','t')
dat2
fit2 = glm(cbind(yes,no)~previous+previous2+s+t,family=binomial,data=dat2)
summary(fit2)
fit2 = glm(cbind(yes,no)~previous+previous2+s+t,family=binomial,data=dat2)
rm(list=ls())
#original data
c1 = c(237,15,16,7,24,3,6,5)
c2 = c(10,4,2,3,3,2,2,11)
c3 = c(118,8,11,6,7,3,4,4)
c4 = c(6,2,1,4,3,1,2,7)
df = data.frame(cbind(c1,c2,c3,c4))
df
#previous1 data
no = c(283,30,140,21,274,26,134,18,266,32,134,14)
yes = c(17,20,12,14,24,26,14,21,28,24,12,17)
previous = c(0,1,0,1,0,1,0,1,0,1,0,1)
s = c(0,0,1,1,0,0,1,1,0,0,1,1)
t = c(10,10,10,10,9,9,9,9,8,8,8,8)
dat = data.frame(cbind(no,yes,previous,s,t))
dat
fit1 = glm(cbind(yes,no)~previous+s+t,family=binomial,data=dat)
summary(fit1)
#previous2 data
getwd()
setwd("D:/강재훈/연세대학교/석사/2019_1_석사_2학기/수업/중응통/HW/HW2/question_5/")
dat2 = read.csv("data.csv")
colnames(dat2) = c('no','yes','previous1','previous2','s','t')
dat2
fit2 = glm(cbind(yes,no)~previous1+previous2+s+t,family=binomial,data=dat2)
summary(fit2)
rm(list=ls())
#original data
c1 = c(237,15,16,7,24,3,6,5)
c2 = c(10,4,2,3,3,2,2,11)
c3 = c(118,8,11,6,7,3,4,4)
c4 = c(6,2,1,4,3,1,2,7)
df = data.frame(cbind(c1,c2,c3,c4))
df
#previous1 data
no = c(283,30,140,21,274,26,134,18,266,32,134,14)
yes = c(17,20,12,14,24,26,14,21,28,24,12,17)
previous = c(0,1,0,1,0,1,0,1,0,1,0,1)
s = c(0,0,1,1,0,0,1,1,0,0,1,1)
t = c(10,10,10,10,9,9,9,9,8,8,8,8)
dat = data.frame(cbind(no,yes,previous,s,t))
dat
fit1 = glm(cbind(yes,no)~previous+s+t,family=binomial,data=dat)
summary(fit1)
#previous2 data
getwd()
setwd("D:/강재훈/연세대학교/석사/2019_1_석사_2학기/수업/중응통/HW/HW2/question_5/")
dat2 = read.csv("data.csv")
colnames(dat2) = c('no','yes','previous1','previous2','s','t')
dat2
fit2 = glm(cbind(yes,no)~previous1+previous2+s+t,family=binomial,data=dat2)
summary(fit2)
